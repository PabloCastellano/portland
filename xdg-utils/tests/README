README: xdg-utils tests

Created 6/27/2006 by Tom Whipple <tom.whipple@intel.com>

RUNNING XDG-UTILS TESTS
-----------------------
At a minimum, you must have your current directory be the same as the directory containing this README. Then, simply execute

$ ./testrun
WARNING: guessed XDG_TEST_DIR to be /home/tw/portland/xdg-utils/tests
TEST_LIST:  generic_bogus_arg-1-1 ... generic_version-1-50
...
FAIL: test_user_mime_install
NORESULT: test_system_mime_install
44 of 50 tests passed.
See xdg-test.log for details.
NOT OK!

FAIL indicates (not suprisingly) a test failure. 
NORESULT indicates that the test prerequisites failed for some reason.

NOTE: The test runner makes guesses about appropriate values of XDG_TEST_DIR and PATH. These values can be overriden explicitly.

To run tests individually, or as smaller groups do something like

$ ./testrun xdg-mime

OR

$ ./testrun xdg-mime/t.user_mime_install

OR (if you have defined XDG_TEST_DIR and PATH correctly)

$ xdg-mime/t.user_mime_install


INTERACTIVE TESTS
-----------------
Because it is difficult to verify the way things appear to the user, some tests are interactive and require the user to verify or perform actions. This is sometimes annoying, so interactive tests can be disabled by setting

$ export XDG_TEST_NO_INTERACTIVE=something

DIRECTORY STRUCTURE
-------------------
xdg-*		tests for each util
include		"library" code used by most tests
generic		generic tests to be run on most utilities. See xdg-mime/t.apply_generic

WRITING XDG-UTILS TESTS
-----------------------
See xdg-mime/t.user_mime_install as an example.

Each test is as follows

test_function() {		-- Tests are functions for TET integration.

test_start "test description"	-- required to begin a test
test_purpose "verbose text"	-- optionally provide a verbose description. not used.
test_init			-- optionally begin a prerequisite section. assertions
				   that fail here cause NORESULT rather than FAIL
<pre-assertions>
test_procedure			-- required to begin the actuall test assertions
<test-assertions>

test_result			-- required to generate result codes. Must be last.
}

run_test test_function
  - OR -
repeat_test test_function NVARS V1 ... VN V1val1 ... V1valM ... VNval1 ... VNvalM
				-- one of the above is required. 
				   see inlcude/testcontrol.sh for detail
				

Questions? Email tom.whipple@intel.com
