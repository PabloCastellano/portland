.\" ** You probably do not want to edit this file directly **
.\" It was generated using the DocBook XSL Stylesheets (version 1.69.1).
.\" Instead of manually editing it, you probably should edit the DocBook XML
.\" source for it and then use the DocBook XSL Stylesheets to regenerate it.
.TH "XDG\-DESKTOP\-MENU" "1" "07/31/2006" "xdg\-utils 1.0 beta2" ""
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.SH "NAME"
xdg\-desktop\-menu \- command line tool for (un)installing desktop menu items
.SH "SYNOPSIS"
.HP 17
\fBxdg\-desktop\-menu\fR install [\fB\-\-noupdate\fR] [\fB\-\-novendor\fR] [\fB\-\-mode\ \fR\fB\fImode\fR\fR] {\fIdesktop\-file\fR \fImenu\-file\fR \fIdirectory\-file\fR}
.HP 17
\fBxdg\-desktop\-menu\fR uninstall [\fB\-\-noupdate\fR] [\fB\-\-mode\ \fR\fB\fImode\fR\fR] {\fIdesktop\-file\fR \fImenu\-file\fR \fIdirectory\-file\fR}
.HP 17
\fBxdg\-desktop\-menu\fR forceupdate [\fB\-\-mode\ \fR\fB\fImode\fR\fR]
.HP 17
\fBxdg\-desktop\-menu\fR {\fB\-\-help\fR \fB\-\-manual\fR \fB\-\-version\fR}
.SH "DESCRIPTION"
.PP
The xdg\-desktop\-menu program can be used to install new items to the desktop's application menu.
.PP
The application menu works according to the XDG Desktop Menu Specification at http://www.freedesktop.org/Standards/menu\-spec
.SH "COMMANDS"
.TP
install
Install applications or submenus into the desktop menu system.
.sp
\fIdesktop\-file\fR: Installs the *.desktop file indicated by
\fIdesktop\-file\fR
to the menu system. A desktop file represents a single application in the menu. Desktop files are defined by the freedesktop.org Desktop Entry Specification. The most important aspects of *.desktop files are summarized below.
.sp
\fImenu\-file\fR: Installs the *.menu file indicated by
\fImenu\-file\fR
to the menu system. A menu file describes the location and contents for one or more new submenus. Each submenu must reference a *.directory file.
.sp
\fIdirectory\-file\fR: Installs the *.directory file indicated by
\fIdirectory\-file\fR
to the menu system. A directory file provides the name and icon for a submenu.
.TP
uninstall
Remove applications or submenus from the desktop menu system previously installed with
\fBxdg\-desktop\-menu install\fR.
.TP
forceupdate
Force an update of the menu system. This is only useful if the last call to xdg\-desktop\-menu included the
\fB\-\-noupdate\fR
option.
.SH "OPTIONS"
.TP
\fB\-\-noupdate\fR
Postpone updating the menu system. If multiple updates to the menu system are made in sequence this flag can be used to indicate that additional changes will follow and that it is not necassery to update the menu system right away.
.TP
\fB\-\-novendor\fR
Normally, xdg\-desktop\-menu checks to ensure that any *.desktop, *.directory and *.menu files to be installed has a vendor prefix. This option can be used to disable that check.
.sp
A vendor prefix consists of alpha characters ([a\-zA\-Z]) and is terminated with a dash ("\-"). Companies and organizations are encouraged to use a word or phrase, preferably the organizations name, for which they hold a trademark as their vendor prefix. The purpose of the vendor prefix is to prevent name conflicts.
.TP
\fB\-\-mode\fR \fImode\fR
\fImode\fR
can be
\fIuser\fR
or
\fIsystem\fR. In user mode the file is (un)installed for the current user only. In system mode the file is (un)installed for all users on the system. Usually only root is allowed to install in system mode.
.sp
The default is to use system mode when called by root and to use user mode when called by a non\-root user.
.TP
\fB\-\-help\fR
Show command synopsis.
.TP
\fB\-\-manual\fR
Show this manualpage.
.TP
\fB\-\-version\fR
Show the xdg\-utils version information.
.SH "DESKTOP FILES"
.PP
An application item in the application menu is represented by a *.desktop file. A *.desktop file consists of a
\fI[Desktop Entry]\fR
header followed by several
\fIKey\fR=\fIValue\fR
lines.
.PP
A *.desktop file can provide a name and description for an application in several different languages. This is done by adding a language code as used by LC_MESSAGES in square brackets behind the
\fIKey\fR. This way one can specify different values for the same
\fIKey\fR
depending on the currently selected language.
.PP
The following keys are often used:
.TP
Value=1.0
This is a mandatory field to indicate that the *.desktop file follows the 1.0 version of the specification.
.TP
Type=Application
This is a mandatory field that indicates that the *.desktop file describes an application launcher.
.TP
Name=\fIApplication Name\fR
The name of the application. For example
\fIMozilla\fR
.TP
GenericName=\fIGeneric Name\fR
A generic description of the application. For example
\fIWeb Browser\fR
.TP
Comment=\fIComment\fR
Optional field to specify a tooltip for the application. For example
\fIVisit websites on the Internet\fR
.TP
Icon=\fIIcon File\fR
The icon to use for the application. This can either be an absolute path to an image file or an icon\-name. If an icon\-name is provided an image lookup by name is done in the user's current icon theme. The
\fBxdg\-icon\-resource\fR
command can be used to install image files into icon themes. The advantage of using an icon\-name instead of an absolute path is that with an icon\-name the application icon can be provided in several different sizes as well as in several differently themed styles.
.TP
Exec=\fICommand Line\fR
The command line to start the application. If the application can open files the %f placeholder should be specified. When a file is dropped on the application launcher the %f is replaced with the file path of the dropped file. If multiple files can be specified on the command line the %F placeholder should be used instead of %f. If the application is able to open URLs in addition to local files then %u or %U can be used instead of %f or %F.
.TP
Categories=\fICategories\fR
A list of categories separated by semi\-colons. A category is a keyword that describes and classifies the application. By default applications are organized in the application menu based on category. The XDG Desktop Menu Specification defines a large number of predefined categories.
.TP
MimeType=\fIMimetypes\fR
A list of mimetypes separated by semi\-colons. This field is used to indicate which file types the application is able to open.
.PP
For a complete oveview of the *.desktop file format please visit http://www.freedesktop.org/wiki/Standards/desktop\-entry\-spec
.SH "ENVIRONMENT VARIABLES"
.PP
xdg\-desktop\-menu honours the following environment variables:
.TP
XDG_UTILS_DEBUG_LEVEL
Setting this environment variable to a non\-zero numerical value makes xdg\-desktop\-menu do more verbose reporting on stderr. Setting a higher value increases the verbosity.
.SH "EXIT CODES"
.PP
An exit code of 0 indicates success while a non\-zero exit code indicates failure. The following failure codes can be returned:
.TP
\fB1\fR
Error in command line syntax.
.TP
\fB2\fR
One of the files passed on the command line did not exist.
.TP
\fB3\fR
A required tool could not be found.
.TP
\fB4\fR
The action failed.
.TP
\fB5\fR
No permission to read one of the files passed on the command line.
.SH "SEE ALSO"
.PP
\fBxdg\-desktop\-icon\fR(1),
\fBxdg\-icon\-resource\fR(1),
\fBxdg\-mime\fR(1)
.SH "EXAMPLES"
.PP
The company ShinyThings Inc. has developed an application named "WebMirror" and would like to add it to the application menu. The company will use "shinythings" as its vendor id. In order to add the application to the menu there needs to be a .desktop file with a suitable
\fICategories\fR
entry:
.sp
.nf
shinythings\-webmirror.desktop:

  [Desktop Entry]
  Encoding=UTF\-8
  Type=Application

  Exec=webmirror
  Icon=webmirror

  Name=WebMirror
  Name[nl]=WebSpiegel

  Categories=Network;WebDevelopment;
.fi
.sp
.PP
Now the xdg\-desktop\-menu tool can be used to add the shinythings\-webmirror.desktop file to the desktop application menu:
.sp
.nf
xdg\-desktop\-menu install ./shinythings\-webmirror.desktop
.fi
.sp
.PP
Note that for the purpose of this example the menu items are available in two languages, English and Dutch. The language code for Dutch is nl.
.PP
In the next example the company ShinyThings Inc. wants to add its own submenu to the desktop application menu consisting of a "WebMirror" menu item and a "WebMirror Admin Tool" menu item.
.PP
First the company needs to create two .desktop files that describe the two menu items, this time no Categories item is needed:
.sp
.nf
shinythings\-webmirror.desktop:

  [Desktop Entry]
  Encoding=UTF\-8
  Type=Application

  Exec=webmirror
  Icon=shinythings\-webmirror

  Name=WebMirror
  Name[nl]=WebSpiegel


shinythings\-webmirror\-admin.desktop:

  [Desktop Entry]
  Encoding=UTF\-8
  Type=Application

  Exec=webmirror\-admintool
  Icon=shinythings\-webmirror\-admintool

  Name=WebMirror Admin Tool
  Name[nl]=WebSpiegel Administratie Tool
.fi
.sp
.PP
The files can be installed with:
.sp
.nf
xdg\-desktop\-menu install \-\-noupdate ./shinythings\-webmirror.desktop
xdg\-desktop\-menu install \-\-noupdate ./shinythings\-webmirror\-admin.desktop
.fi
.sp
.PP
Because multiple items are added the
\fB\-\-noupdate\fR
option has been used.
.PP
In addition a .directory file needs to be created to provide a title and icon for the sub\-menu itself:
.sp
.nf
shinythings\-webmirror.directory:

  [Desktop Entry]
  Encoding=UTF\-8

  Icon=shinythings\-webmirror\-menu

  Name=WebMirror
  Name[nl]=WebSpiegel
.fi
.sp
.PP
This webmirror.directory file can be installed with:
.sp
.nf
xdg\-desktop\-menu install \-\-noupdate ./shinythings\-webmirror.directory
.fi
.sp
.PP
The *.desktop and *.directory files reference icons with the names webmirror, webmirror\-admin and webmirror\-menu which should also be installed. In this example the icons are installed in two different sizes, once with a size of 22x22 pixels and once with a size of 64x64 pixels:
.sp
.nf
xdg\-icon\-resource install \-\-size 22 ./wmicon\-22.png shinythings\-webmirror.png
xdg\-icon\-resource install \-\-size 22 ./wmicon\-menu\-22.png shinythings\-webmirror\-menu.png
xdg\-icon\-resource install \-\-size 22 ./wmicon\-admin\-22.png shinythings\-webmirror\-admin.png
xdg\-icon\-resource install \-\-size 64 ./wmicon\-64.png shinythings\-webmirror.png
xdg\-icon\-resource install \-\-size 64 ./wmicon\-menu\-64.png shinythings\-webmirror\-menu.png
xdg\-icon\-resource install \-\-size 64 ./wmicon\-admin\-64.png shinythings\-webmirror\-admin.png
.fi
.sp
.PP
The last step is to provide a .menu file that links it all togther:
.sp
.nf
shinythings\-webmirror.menu:

  <!DOCTYPE Menu PUBLIC "\-//freedesktop//DTD Menu 1.0//EN"
     "http://www.freedesktop.org/standards/menu\-spec/menu\-1.0.dtd">
  <Menu>
    <Name>Applications</Name>
    <Menu>
      <Name>WebMirror</Name>
      <Directory>shinythings\-webmirror.directory</Directory>
      <Include>
        <Filename>shinythings\-webmirror.desktop</Filename>
        <Filename>shinythings\-webmirror\-admin.desktop</Filename>
      </Include>
    </Menu>
  </Menu>
.fi
.sp
.PP
The shinythings\-webmirror.menu file can be installed with:
.sp
.nf
xdg\-desktop\-menu install \-\-noupdate ./shinythings\-webmirror.menu
.fi
.sp
.PP
After installing multiple files with
\fB\-\-noupdate\fR
make sure to force an update:
.sp
.nf
xdg\-desktop\-menu forceupdate
.fi
.sp
.SH "AUTHOR"
Kevin Krammer, Jeremy White. 
.br
<kevin.krammer@gmx.at>
.br
<jwhite@codeweavers.com>
