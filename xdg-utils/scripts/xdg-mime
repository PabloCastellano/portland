#!/bin/sh
#---------------------------------------------
#   xdg-mime
#
#   Utility script to manipulate MIME related information
#   on XDG compliant systems.
#
#   Refer to the usage() function below for usage.
#
#   Copyright 2006, Kevin Krammer <kevin.krammer@gmx.at>
#   Copyright 2006, Jeremy White <jwhite@codeweavers.com>
#
#   LICENSE:
#
#   Permission is hereby granted, free of charge, to any person obtaining a
#   copy of this software and associated documentation files (the "Software"),
#   to deal in the Software without restriction, including without limitation
#   the rights to use, copy, modify, merge, publish, distribute, sublicense,
#   and/or sell copies of the Software, and to permit persons to whom the
#   Software is furnished to do so, subject to the following conditions:
#
#   The above copyright notice and this permission notice shall be included
#   in all copies or substantial portions of the Software.
#
#   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
#   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
#   THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
#   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
#   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
#   OTHER DEALINGS IN THE SOFTWARE.
#
#---------------------------------------------

usage()
{
cat << _USAGE
xdg-mime ? command line tool for providing information about file type handling

Synopsis

xdg-mime [--help] [--info FILE] [--defapp FILE]

_USAGE
    exit 1
}

info_kde()
{
    kfile "$1" 2> /dev/null | cut -d "(" -f 2 | cut -d ")" -f 1

    exit 0
}

info_gnome()
{
    gnomevfs-info "$1" 2> /dev/null | grep MIME | cut -d ":" -f 2 | sed s/"^ "//

    exit 0
}

info_generic()
{
    /usr/bin/file -i "$1" 2> /dev/null | cut -d ":" -f 2 | sed s/"^ "//

    exit 0
}

defapp_kde()
{
    MIME=`kfile "$1" 2> /dev/null | cut -d "(" -f 2 | cut -d ")" -f 1`

    if [ x"$MIME" != x"" ]; then
        ktradertest "$MIME" Application 2>/dev/null | grep DesktopEntryPath \
            | head -n 1 | cut -d ':' -f 2 | cut -d \' -f 2 | xargs basename
        exit 0
    else
        exit 3;
    fi
}

defapp_gnome()
{
    gnomevfs-info "$1" 2> /dev/null | grep "Default app" | cut -d ":" -f 2 \
        | cut -d " " -f 2
}

[ x"$1" != x"" ] || usage
[ x"$1" != x"--help" ] || usage

#@xdg-utils-common@

#----------------------------------------------------------------------------
#   Common utility functions included in all XDG wrapper scripts
#----------------------------------------------------------------------------
detectDE()
{
    if [ x"$KDE_FULL_SESSION" = x"true" ]; then DE=kde;
    elif [ x"$GNOME_DESKTOP_SESSION_ID" != x"" ]; then DE=gnome;
    elif xprop -root _DT_SAVE_MODE | grep ' = \"xfce4\"$' >/dev/null 2>&1; then DE=xfce;
    fi
}

detectDE

#----------------------------------------------------------------------------



if [ x"$1" = x"--info" ]; then
    shift
    [ x"$1" != x"" ] || usage

    if [ x"$DE" = x"" ]; then
        if [ -x /usr/bin/file ]; then
            DE=generic
        fi
    fi

    case "$DE" in
        kde)
        info_kde "$1"
        ;;

        gnome)
        info_gnome "$1"
        ;;

        generic)
        info_generic "$1"
        ;;

        *)
        echo Sorry, no method available for quering MIME type of "$1"
        exit 2
        ;;
    esac
elif [ x"$1" = x"--defapp" ]; then
    shift
    [ x"$1" != x"" ] || usage

    case "$DE" in
        kde)
        defapp_kde "$1"
        ;;

        gnome)
        defapp_gnome "$1"
        ;;

        *)
        echo Sorry, no method available for quering default application for file "$1"
        exit 2
        ;;
    esac
else
    usage
fi
