#!/bin/sh
#---------------------------------------------
#   xdg-desktop
#
#   Utility script to install desktop items on a Linux desktop.
#
#   Refer to the usage() function below for usage.
#
#   Copyright 2006, Kevin Krammer <kevin.krammer@gmx.at>
#   Copyright 2006, Jeremy White <jwhite@codeweavers.com>
#
#   LICENSE:
#
#   Permission is hereby granted, free of charge, to any person obtaining a
#   copy of this software and associated documentation files (the "Software"),
#   to deal in the Software without restriction, including without limitation
#   the rights to use, copy, modify, merge, publish, distribute, sublicense,
#   and/or sell copies of the Software, and to permit persons to whom the
#   Software is furnished to do so, subject to the following conditions:
#
#   The above copyright notice and this permission notice shall be included
#   in all copies or substantial portions of the Software.
#
#   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
#   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
#   THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
#   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
#   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
#   OTHER DEALINGS IN THE SOFTWARE.
#
#---------------------------------------------

usage()
{
cat << _USAGE
xdg-desktop ? command line tool for (un)installing icons to the desktop

Synopsis

xdg-desktop [--help] [--vendor vendor-id] [[--install file] | [--uninstall file
]]

_USAGE
    exit 1
}

[ x"$1" != x"" ] || usage

action=
desktop_file=
while [ $# -gt 0 ] ; do
    parm=$1
    shift

    case $parm in
      --install)
        if [ -n "$action" ] ; then
            echo Error:  Too many options: $parm $1
            exit 1
        fi
        if [ ! -f "$1" ] ; then
            echo Error:  You must specify an existing file to install.
            exit 1
        fi

        action=install
        desktop_file=$1
        shift
        ;;

      --uninstall)
        if [ -n "$action" ] ; then
            echo Error:  Too many options: $parm $1
            exit 1
        fi
        if [ -z "$1" ] ; then
            echo Error:  You must specify a file to uninstall.
            exit 1
        fi
        action=uninstall
        desktop_file=$1
        shift
        ;;

      --vendor)
        if [ -z "$1" ] ; then
            echo Error:  You must specify a vendor-id.
            exit 1
        fi
        vendor=$1
        shift
        ;;

      *)
        echo "$parm:  Invalid parameter/option"
        usage
        exit 2
        ;;
    esac
done

if [ -z "$action" ] ; then
    usage
    exit 2
fi

filetype=
case $desktop_file in
  *.desktop)
     filetype=desktop
     ;;
  *)
     filetype=other
     ;;
esac

my_umask=077
desktop_dir=$HOME/Desktop
[ -w $desktop_dir ] || desktop_dir=

# echo "[using|$desktop_dir]"

basefile=`basename $desktop_file`
[ -z $vendor ] || [ x"$filetype" != x"desktop" ] || basefile=$vendor-$basefile

case $action in
    install)
        save_umask=`umask`
        umask $my_umask

        for x in $desktop_dir ; do
            mkdir -p $x
            cp $desktop_file $x/$basefile
        done

        umask $save_umask
        ;;

    uninstall)
        for x in $desktop_dir ; do
            rm -f $x/$basefile
        done

        ;;
esac

exit 0


